plugins {
    id "com.github.johnrengelman.shadow" version "8.1.1"
    id "me.shedaniel.unified-publishing"
}

architectury {
    platformSetupLoomIde()
    neoForge()
}

base {
    archivesName = "rch-supplementaries-compat-neoforge"
}

configurations {
    common
    shadowCommon
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentNeoForge.extendsFrom common
}

repositories {
    maven {
        name = "NeoForge"
        url = "https://maven.neoforged.net"
    }
}

dependencies {
    // neoForge dependency method doesn't exist???
    //neoForge libs.neoforge

    // "Failed to process jar when running jar processor: fabric-loom:access-widener"
    // "Cause: supplementaries.accesswidener"
    // why.
    //modImplementation libs.supplementaries.neoforge
    modRuntimeOnly libs.moonlight.neoforge
    modRuntimeOnly libs.rightclickharvest.neoforge

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionNeoForge")) { transitive = false }
}

if (System.getenv("CURSEFORGE_API_KEY") != null && System.getenv("MODRINTH_API_KEY") != null) {
    unifiedPublishing {
        project {
            displayName = "V${project.version} (NeoForge ${project.minecraft_version})"
            changelog = rootProject.file("CHANGELOG.md").text
            releaseType = project.version.contains("beta") ? "beta" : "release"
            gameVersions = [project.minecraft_version]
            gameLoaders = ["neoforge"]

            mainPublication tasks.remapJar

            relations {
                depends {
                    curseforge = "supplementaries"
                    modrinth = "supplementaries"
                }

                depends {
                    curseforge = "rightclickharvest"
                    modrinth = "rightclickharvest"
                }
            }

            curseforge {
                token = System.getenv("CURSEFORGE_API_KEY")
                id = "1038427"
            }

            modrinth {
                token = System.getenv("MODRINTH_API_KEY")
                id = "1UdKJCjq"
            }
        }
    }
}

processResources {
    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "rch_version": libs.versions.rightclickharvest.neoforge.get(),
                "supplementaries_version": project.supplementaries_version
    }

    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "rch_version", libs.versions.rightclickharvest.neoforge.get()
    inputs.property "supplementaries_version", project.supplementaries_version
}

shadowJar {
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    archiveClassifier = "dev-shadow"
}

remapJar {
    injectAccessWidener = true
    input.set shadowJar.archiveFile
    dependsOn shadowJar
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}
